name: Deploy RKE2

on:
  push:
    paths:
      - 'config.json'
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy-rke2:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      kvname: ${{ steps.deploy_rke2.outputs.kvname }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - run: which kubectl

      # - name: Setup Python
      #   uses: actions/setup-python@v3.0.0
      
      # - uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}
      #     environment: AzureUSGovernment
      
      - name: Deploy RKE2
        id: deploy_rke2
        uses: addnab/docker-run-action@v3
        with:
          image: shuffereu/dsopbuilder:latest
          options: -v /home/runner/work/dsop-environment/dsop-environment:/transfer
          shell: bash
          run: | 
            cp -f /transfer/config.json config/config.json
            
            export ARM_TENANT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq .tenantId | tr -d '"')
            export ARM_CLIENT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq .clientId | tr -d '"')
            export ARM_CLIENT_SECRET=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq .clientSecret | tr -d '"')
            export ARM_SUBSCRIPTION_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq .subscriptionId | tr -d '"')
            export ARM_ENVIRONMENT=usgovernment

            az cloud set --name AzureUSGovernment
            az login --service-principal -u "${ARM_CLIENT_ID}" -p "${ARM_CLIENT_SECRET}" --tenant "${ARM_TENANT_ID}"

            python3 main.py settings --help
            python3 main.py settings validate
            python3 main.py settings list
            yes | python3 main.py rke2 apply --project foo
            cd /PyBuilder/working/dsop_rke2/foo
            
            # source ../scripts/fetch-kubeconfig.sh
            
            DIRECTORY=$(dirname $0)

            KV_NAME=${1:-$(terraform output -raw kv_name)}
            FILE=$(realpath rke2.kubeconfig)
           
            echo "::set-output name=kvname::$KV_NAME"

            # az account show 
            # echo "Fetching kubeconfig from KeyVault $KV_NAME"
            # az keyvault secret show --name kubeconfig --vault-name $KV_NAME -o json | jq -r '.value' > $FILE
            
            
            # ls -la /PyBuilder/working/dsop_rke2/foo/rke2.kubeconfig
            # cp /PyBuilder/working/dsop_rke2/foo/rke2.kubeconfig /transfer


          # Registry
          # registry: # optional
          # Username
          # username: # optional
          # Password
          # password: # optional
          # Docker Network ID
          # docker_network: # optional, default is ${{ job.container.network }}
     

  
  deploy-bigbang:
    runs-on: ubuntu-latest
    needs: deploy-rke2
    steps:
      - name: Login to Azure US Gov Cloud with CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: 'AzureUSGovernment'
          enable-AzPSSession: false

      - name: set kubeconfig
        env:
          KV_NAME: ${{ needs.deploy-rke2.outputs.kvname }}
        run: |          
          FILE=$(realpath rke2.kubeconfig)
          echo "Fetching kubeconfig from KeyVault $KV_NAME"
          az keyvault secret show --name kubeconfig --vault-name $KV_NAME -o json | jq -r '.value' > $FILE

          ls -la $FILE

          export KUBECONFIG=$FILE
          env | grep KUBECONFIG

      - name: bootstrap local tools
        shell: bash
        run: |
          curl https://raw.githubusercontent.com/benc-uk/tools-install/master/base.sh | bash
          
          sudo apt-get update && sudo apt-get install -y kubectl
          
          curl https://raw.githubusercontent.com/benc-uk/tools-install/master/sops.sh | bash
          curl https://raw.githubusercontent.com/benc-uk/tools-install/master/kustomize.sh | bash

          env | grep KUBECONFIG
      
#      - name: Kubernetes toolset
#        uses: stefanprodan/kube-tools@v1.7.1
#        with:
#          command: |
#            echo ${{ needs.deploy-rke2.outputs.kvname }}